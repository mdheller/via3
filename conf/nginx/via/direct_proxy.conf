proxy_ssl_server_name on;

# Replace the default url-decoded $uri with the $request_uri which is as
# we received it without url-decoding
rewrite ^ $request_uri;

# Redirect Google Drive requests to the API using our key
# Some weird things:
# * A rule that starts with http will _immediately_ issue a proxy_redirect
# * So we seemingly pointlessly capture (https) and replace it
# * This way the _result_ starts with https, but the _rule_ doesn't and we can carry on
# * NGINX will _merge_ queries you add, not replace them unless you put '?' on the end
rewrite ^/proxy/static/(https)://drive.google.com/uc\?id=(.*)&export=download$ $1://www.googleapis.com/drive/v3/files/$2?key=$google_api_key&alt=media? break;

# Remove our URL part off of the front
# The ? at the end means we strip off the args part (which we will add back on later)
# I have no idea why this works to be honest but it seems to
rewrite ^/proxy/static/(.*)$ $1? break;

# The proxy directly to the resulting URL
# Add back on the args which we stripped above so we don't get them twice
proxy_pass $uri$is_args$args;

proxy_redirect ~^(.*)$ $original_scheme://$http_host/proxy/static/$1;

# Strip hypothesis cookies and authorization header.
set $stripped_cookie $http_cookie;

if ($stripped_cookie ~ "(.*)\s*auth=[^;]+;?(.*)") {
    set $stripped_cookie $1$2;
}
if ($stripped_cookie ~ "(.*)\s*session=[^;]+;?(.*)") {
    set $stripped_cookie $1$2;
}
proxy_set_header Cookie $stripped_cookie;
proxy_set_header Authorization "";

# Drop the referer as it's always wrong, and some sites will block you if it's
# present, but let you through it it's missing
proxy_set_header Referer "";

# Do not allow the third party server to set cookies.
add_header "Set-Cookie" "";

# Prevent the third party from adding CORS controls
proxy_hide_header "Access-Control-Allow-Origin";
proxy_hide_header "Access-Control-Allow-Credentials";
proxy_hide_header "Access-Control-Allow-Methods";
proxy_hide_header "Access-Control-Allow-Headers";
proxy_hide_header "Access-Control-Expose-Headers";

