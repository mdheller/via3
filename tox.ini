[pytest]
filterwarnings =
    error
    ; Suppress warnings about an import of `imp` by Pyramid
    ignore:the imp module is deprecated in favour of importlib

xfail_strict=true

[tox]
envlist = tests
skipsdist = true
minversion = 3.8.0
requires =
    tox-pip-extensions
    tox-pyenv
    tox-run-command
    tox-envfile
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
skip_install = true
setenv =
    dev: NEW_RELIC_APP_NAME = {env:NEW_RELIC_APP_NAME:via3}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
    dev: SENTRY_ENVIRONMENT = {env:SENTRY_ENVIRONMENT:dev}
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
passenv =
    HOME
    dev: CHROME_EXTENSION_ID
    dev: SENTRY_DSN
    dev: NEW_RELIC_LICENSE_KEY
    dev: NGINX_SERVER
    dev: CLIENT_EMBED_URL
    dev: LEGACY_VIA_URL
    docker-compose: GOOGLE_API_KEY
deps =
    dev: -r requirements-dev.in
    tests: coverage
    {tests,lint}: -r requirements.txt
    {tests,lint}: -r requirements-test.in
    lint: pylint<2.5
    lint: pydocstyle
    {format,checkformatting}: black
    {format,checkformatting}: isort
    docker-compose: docker-compose
    pip-compile: pip-tools<5
    update-pdfjs: -e .
    build: -e .
    build: whitenoise
    {build,lint}: rcssmin
    {build,lint}: rjsmin
    {build,lint}: htmlmin
whitelist_externals =
    dev: gunicorn
    dev: newrelic-admin
    update-pdfjs: sh
commands =
    dev: {posargs:gunicorn -c conf/gunicorn/dev.conf.py --paste conf/development.ini}
    docker-compose: docker-compose {posargs}
    lint: pydocstyle --explain via
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:via bin}
    lint: pylint --rcfile=tests/.pylintrc tests
    format: black via tests bin
    format: isort --recursive --quiet --atomic via tests bin
    checkformatting: black --check via tests bin
    checkformatting: isort --recursive --quiet --check-only via tests bin
    tests: coverage run -m pytest {posargs:tests/unit/}
    tests: -coverage combine
    tests: coverage report
    pip-compile: pip-compile {posargs}
    update-pdfjs: sh bin/update-pdfjs
    update-pdfjs: python bin/create_pdf_template.py
    build: python bin/minify_assets.py -c conf/minify_assets.json
    build: python -m whitenoise.compress via/static
